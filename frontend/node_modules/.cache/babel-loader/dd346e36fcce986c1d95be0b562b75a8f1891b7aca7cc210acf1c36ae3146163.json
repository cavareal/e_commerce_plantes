{"ast":null,"code":"var _jsxFileName = \"C:\\\\Repo\\\\ReactApp\\\\frontend\\\\src\\\\components\\\\organism\\\\ShoppingList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useContext } from 'react';\n// import {itemList} from \"../../datas/ItemList\";\nimport ItemCard from \"../molecule/ItemCard\";\nimport Search from \"../molecule/Search\";\nimport SearchBar from \"../molecule/Search\";\nimport Modal from 'react-modal';\nimport Button from \"../atom/Button\";\nimport { PreferencesContext } from \"../../context/PreferenceProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ShoppingList({\n  addToBasket\n}) {\n  _s();\n  const {\n    darkMode,\n    setDarkMode\n  } = useContext(PreferencesContext);\n  useEffect(() => {\n    const savedDarkMode = localStorage.getItem('darkMode');\n    setDarkMode(savedDarkMode === 'true');\n  }, []);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [itemList, setItemsList] = useState([]);\n  useEffect(() => {\n    fetch(`http://localhost:3000/`).then(response => response.json()).then(data => {\n      setItemsList(data);\n    }).catch(error => {\n      console.error('Erreur lors de la récupération des plantes:', error);\n    });\n  }, []);\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Ici, vous pouvez ajouter le code pour envoyer les informations à votre base de données\n    // Fermez la pop-up une fois que les données sont envoyées\n    setModalIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap justify-start\",\n      children: itemList.map(item => /*#__PURE__*/_jsxDEV(ItemCard, {\n        item: item,\n        addToBasket: addToBasket\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setModalIsOpen(true),\n      bgColor: `${darkMode ? \"secondary\" : \"primary\"}`,\n      textColor: `${darkMode ? \"black\" : \"white\"}`,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: () => setModalIsOpen(false),\n      className: \"w-3/4 h-3/4 p-4\",\n      style: {\n        content: {\n          top: '50%',\n          left: '50%',\n          right: 'auto',\n          bottom: 'auto',\n          marginRight: '-50%',\n          transform: 'translate(-50%, -50%)'\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-lg font-medium mb-2\",\n            children: \"Nom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"w-full p-3 border border-gray-300 rounded-lg bg-gray-50 focus:outline-none focus:ring focus:ring-green-300 focus:border-green-300\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          bgColor: `${darkMode ? \"secondary\" : \"primary\"}`,\n          textColor: `${darkMode ? \"black\" : \"white\"}`,\n          children: \"Enregistrer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(ShoppingList, \"LkuKsUr7eOcuOkkWeACbVB4KtTQ=\");\n_c = ShoppingList;\nexport default ShoppingList;\nvar _c;\n$RefreshReg$(_c, \"ShoppingList\");","map":{"version":3,"names":["useState","useEffect","useContext","ItemCard","Search","SearchBar","Modal","Button","PreferencesContext","jsxDEV","_jsxDEV","ShoppingList","addToBasket","_s","darkMode","setDarkMode","savedDarkMode","localStorage","getItem","modalIsOpen","setModalIsOpen","itemList","setItemsList","fetch","then","response","json","data","catch","error","console","handleSubmit","event","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","item","id","onClick","bgColor","textColor","isOpen","onRequestClose","style","content","top","left","right","bottom","marginRight","transform","onSubmit","type","_c","$RefreshReg$"],"sources":["C:/Repo/ReactApp/frontend/src/components/organism/ShoppingList.js"],"sourcesContent":["import {useState, useEffect, useContext} from 'react'\r\n// import {itemList} from \"../../datas/ItemList\";\r\nimport ItemCard from \"../molecule/ItemCard\";\r\nimport Search from \"../molecule/Search\";\r\nimport SearchBar from \"../molecule/Search\";\r\nimport Modal from 'react-modal';\r\nimport Button from \"../atom/Button\";\r\nimport {PreferencesContext} from \"../../context/PreferenceProvider\";\r\n\r\nfunction ShoppingList({ addToBasket }) {\r\n\r\n    const {darkMode, setDarkMode} = useContext(PreferencesContext)\r\n\r\n    useEffect(() => {\r\n        const savedDarkMode = localStorage.getItem('darkMode');\r\n        setDarkMode(savedDarkMode === 'true');\r\n    }, []);\r\n\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [itemList, setItemsList] = useState([])\r\n    useEffect(() => {\r\n        fetch(`http://localhost:3000/`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setItemsList(data)\r\n            })\r\n            .catch((error) => {\r\n                console.error('Erreur lors de la récupération des plantes:', error);\r\n            })\r\n    }, [])\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        // Ici, vous pouvez ajouter le code pour envoyer les informations à votre base de données\r\n        // Fermez la pop-up une fois que les données sont envoyées\r\n        setModalIsOpen(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <SearchBar/>\r\n            <div className=\"flex flex-wrap justify-start\">\r\n                {itemList.map((item) => (\r\n                    <ItemCard item={item} key={item.id} addToBasket={addToBasket}/>\r\n                ))}\r\n            </div>\r\n            <Button onClick={() => setModalIsOpen(true)}\r\n                    bgColor={`${darkMode ? \"secondary\" : \"primary\"}`}\r\n                    textColor={`${darkMode ? \"black\" : \"white\"}`}>+</Button>\r\n            <Modal isOpen={modalIsOpen} onRequestClose={() => setModalIsOpen(false)} className=\"w-3/4 h-3/4 p-4\"\r\n                   style={{\r\n                       content: {\r\n                           top: '50%',\r\n                           left: '50%',\r\n                           right: 'auto',\r\n                           bottom: 'auto',\r\n                           marginRight: '-50%',\r\n                           transform: 'translate(-50%, -50%)'\r\n                       }\r\n                   }}>\r\n                <form onSubmit={handleSubmit}>\r\n                    {/* Ajoutez ici les champs de votre formulaire */}\r\n                    <div className=\"grid grid-cols-1\">\r\n                        <label className=\"block text-lg font-medium mb-2\">Nom</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"w-full p-3 border border-gray-300 rounded-lg bg-gray-50 focus:outline-none focus:ring focus:ring-green-300 focus:border-green-300\"/>\r\n                    </div>\r\n                    <Button bgColor={`${darkMode ? \"secondary\" : \"primary\"}`}\r\n                            textColor={`${darkMode ? \"black\" : \"white\"}`}>Enregistrer</Button>\r\n                </form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ShoppingList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}