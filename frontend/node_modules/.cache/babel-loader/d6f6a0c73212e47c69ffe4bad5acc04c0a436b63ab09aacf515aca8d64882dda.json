{"ast":null,"code":"var _jsxFileName = \"C:\\\\Repo\\\\ReactApp\\\\frontend\\\\src\\\\components\\\\organism\\\\ShoppingList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\n// import {itemList} from \"../../datas/ItemList\";\nimport ItemCard from \"../molecule/ItemCard\";\nimport Search from \"../molecule/Search\";\nimport SearchBar from \"../molecule/Search\";\nimport Modal from 'react-modal';\nimport Button from \"../atom/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ShoppingList({\n  addToBasket\n}) {\n  _s();\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [itemList, setItemsList] = useState([]);\n  useEffect(() => {\n    fetch(`http://localhost:3000/`).then(response => response.json()).then(data => {\n      setItemsList(data);\n    }).catch(error => {\n      console.error('Erreur lors de la récupération des plantes:', error);\n    });\n  }, []);\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Ici, vous pouvez ajouter le code pour envoyer les informations à votre base de données\n    // Fermez la pop-up une fois que les données sont envoyées\n    setModalIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap justify-start\",\n      children: itemList.map(item => /*#__PURE__*/_jsxDEV(ItemCard, {\n        item: item,\n        addToBasket: addToBasket\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setModalIsOpen(true),\n      bgColor: `${darkMode ? \"secondary\" : \"primary\"}`,\n      textColor: `${darkMode ? \"black\" : \"white\"}`,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: () => setModalIsOpen(false),\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Enregistrer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(ShoppingList, \"1rpCk7QXO8pyx8oveIA6zaf1Ehc=\");\n_c = ShoppingList;\nexport default ShoppingList;\nvar _c;\n$RefreshReg$(_c, \"ShoppingList\");","map":{"version":3,"names":["useState","useEffect","ItemCard","Search","SearchBar","Modal","Button","jsxDEV","_jsxDEV","ShoppingList","addToBasket","_s","modalIsOpen","setModalIsOpen","itemList","setItemsList","fetch","then","response","json","data","catch","error","console","handleSubmit","event","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","item","id","onClick","bgColor","darkMode","textColor","isOpen","onRequestClose","onSubmit","type","_c","$RefreshReg$"],"sources":["C:/Repo/ReactApp/frontend/src/components/organism/ShoppingList.js"],"sourcesContent":["import { useState, useEffect } from 'react'\r\n// import {itemList} from \"../../datas/ItemList\";\r\nimport ItemCard from \"../molecule/ItemCard\";\r\nimport Search from \"../molecule/Search\";\r\nimport SearchBar from \"../molecule/Search\";\r\nimport Modal from 'react-modal';\r\nimport Button from \"../atom/Button\";\r\n\r\nfunction ShoppingList({ addToBasket }) {\r\n\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [itemList, setItemsList] = useState([])\r\n    useEffect(() => {\r\n        fetch(`http://localhost:3000/`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setItemsList(data)\r\n            })\r\n            .catch((error) => {\r\n                console.error('Erreur lors de la récupération des plantes:', error);\r\n            })\r\n    }, [])\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        // Ici, vous pouvez ajouter le code pour envoyer les informations à votre base de données\r\n        // Fermez la pop-up une fois que les données sont envoyées\r\n        setModalIsOpen(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <SearchBar/>\r\n            <div className=\"flex flex-wrap justify-start\">\r\n                {itemList.map((item) => (\r\n                    <ItemCard item={item} key={item.id} addToBasket={addToBasket}/>\r\n                ))}\r\n            </div>\r\n            <Button onClick={() => setModalIsOpen(true)}\r\n                    bgColor={`${darkMode ? \"secondary\" : \"primary\"}`}\r\n                    textColor={`${darkMode ? \"black\" : \"white\"}`}>+</Button>\r\n            <Modal isOpen={modalIsOpen} onRequestClose={() => setModalIsOpen(false)}>\r\n                <form onSubmit={handleSubmit}>\r\n                    {/* Ajoutez ici les champs de votre formulaire */}\r\n                    <button type=\"submit\">Enregistrer</button>\r\n                </form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ShoppingList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}